PEP: 217
Title: Display Hook for Interactive Use
Version: $Revision$
Author: peps@zadka.site.co.il (Moshe Zadka)
Status: Draft
Type: Standards Track
Python-Version: 2.1
Created: 31-Jul-2000
Post-History: 


Abstract

    Python's interactive mode is one of the implementation's great
    strengths -- being able to write expressions on the command line
    and get back a meaningful output.  However, the output function
    cannot be all things to all people, and the current output
    function too often falls short of this goal.  This PEP describes a
    way to provides alternatives to the built-in display function in
    Python, so users will have control over the output from the
    interactive interpreter.

Solution

    The bytecode PRINT_EXPR will call sys.displayhook(POP())
    A displayhook() will be added to the sys builtin module, which is
    equivalent to

    import __builtin__
    def displayhook(o):
        if o is None:
            return
        __builtin__._ = o
        print o
        
Jython Issues

    The author knows too little about Jython, but it is very important
    to be compatible with it. displayhook will have to be added to sys,
    but since Jython works with Java bytecodes, the compiler would have
    to be changed too, or maybe not.
    Barry?


Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:
